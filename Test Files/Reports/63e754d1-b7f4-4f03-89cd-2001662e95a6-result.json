{"name": "test_product_add", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <pre_sample_test.TestApp object at 0x0000016AAAC2C5F0>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_product_add(self):\n        try:\n            current_url=self.driver.current_url\n            print(\"In Coming\")\n            self.driver.refresh()\n            print(\"Product Add URL : \",self.driver.get(current_url))\n            logging.error(self.driver.get(current_url))\n            self.driver.get(current_url)\n            print(current_url)\n            import excel_utils_functions\n            rows = excel_utils_functions.row_count(self.file_path, 'Product Add Data')\n            print(\"Row Count:\", rows)\n            for row in range(2, rows+1):\n                product_id = excel_utils_functions.read_data(self.file_path,\"Product Add Data\", row, 1)\n                product_desc = excel_utils_functions.read_data(self.file_path,\"Product Add Data\", row, 2)\n                expected_result = excel_utils_functions.read_data(self.file_path,\"Product Add Data\", row, 3)\n                # web element\n                data = self.driver.find_element(By.NAME,\"product_id\")\n                data.send_keys(product_id)\n                print(data.text)\n                # get_value = data.get_attribute(\"value\")\n                # print(\"Values\",get_value)\n                self.driver.find_element(By.NAME,\"product_desc\").send_keys(product_desc)\n                self.driver.find_element(By.XPATH,\"//input[@type='submit']\").click()\n                time.sleep(3)\n                element = self.driver.find_element(By.XPATH,\"/html/body/div[1]/h4[1]\")\n                print(\"Message:\", element.text)\n    \n                if product_id == True:\n                    print(\"Test Passed\")\n                    excel_utils_functions.write_data(self.file_path, \"Product Add Data\",row, 4,\"Passed\")\n                    assert True\n                else:\n                    print(\"Test Failed\")\n                    excel_utils_functions.write_data(self.file_path, \"Product Add Data\",row, 4,\"Failed\")\n>                   assert False\nE                   assert False\n\npre_sample_test.py:89: AssertionError"}, "attachments": [{"name": "log", "source": "72b37e1b-adf7-4811-afa8-9423e0ea852f-attachment.txt", "type": "text/plain"}], "start": 1738860219746, "stop": 1738860224178, "uuid": "173e8dda-80f1-4188-ad1f-7b95a34c92d5", "historyId": "23a34a02cd4f603b6a92fe389372e7aa", "testCaseId": "23a34a02cd4f603b6a92fe389372e7aa", "fullName": "pre_sample_test.TestApp#test_product_add", "labels": [{"name": "severity", "value": "critical"}, {"name": "suite", "value": "pre_sample_test"}, {"name": "subSuite", "value": "TestApp"}, {"name": "host", "value": "DESKTOP-D5ES2FE"}, {"name": "thread", "value": "21828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pre_sample_test"}]}