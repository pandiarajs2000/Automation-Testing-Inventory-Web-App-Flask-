{"name": "test_product_add", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"product_id\"]\"}\n  (Session info: chrome=132.0.6834.162); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7E9EB02F5+28725]\n\t(No symbol) [0x00007FF7E9E12AE0]\n\t(No symbol) [0x00007FF7E9CA510A]\n\t(No symbol) [0x00007FF7E9CF93D2]\n\t(No symbol) [0x00007FF7E9CF95FC]\n\t(No symbol) [0x00007FF7E9D43407]\n\t(No symbol) [0x00007FF7E9D1FFEF]\n\t(No symbol) [0x00007FF7E9D40181]\n\t(No symbol) [0x00007FF7E9D1FD53]\n\t(No symbol) [0x00007FF7E9CEA0E3]\n\t(No symbol) [0x00007FF7E9CEB471]\n\tGetHandleVerifier [0x00007FF7EA1DF30D+3366989]\n\tGetHandleVerifier [0x00007FF7EA1F12F0+3440688]\n\tGetHandleVerifier [0x00007FF7EA1E78FD+3401277]\n\tGetHandleVerifier [0x00007FF7E9F7AAAB+858091]\n\t(No symbol) [0x00007FF7E9E1E74F]\n\t(No symbol) [0x00007FF7E9E1A304]\n\t(No symbol) [0x00007FF7E9E1A49D]\n\t(No symbol) [0x00007FF7E9E08B69]\n\tBaseThreadInitThunk [0x00007FF8B2E6259D+29]\n\tRtlUserThreadStart [0x00007FF8B3AEAF38+40]", "trace": "self = <pre_sample_test.TestApp object at 0x00000224A69052B0>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_product_add(self):\n        try:\n            current_url=self.driver.current_url\n            print(\"In Coming\")\n            self.driver.refresh()\n            print(\"Product Add URL : \",self.driver.get(current_url))\n            self.driver.get(current_url)\n            import excel_utils_functions\n            rows = excel_utils_functions.row_count(self.file_path, 'Product Add Data')\n            print(\"Row Count:\", rows)\n            for row in range(2, rows+1):\n                product_id = excel_utils_functions.read_data(self.file_path,\"Product Add Data\", row, 1)\n                product_desc = excel_utils_functions.read_data(self.file_path,\"Product Add Data\", row, 2)\n                expected_result = excel_utils_functions.read_data(self.file_path,\"Product Add Data\", row, 3)\n                # web element\n>               data = self.driver.find_element(By.NAME,\"product_id\")\n\npre_sample_test.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:888: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000224A6905F70>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7E9E08B69]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8B2E6259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF8B3AEAF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"product_id\"]\"}\nE         (Session info: chrome=132.0.6834.162); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7E9EB02F5+28725]\nE       \t(No symbol) [0x00007FF7E9E12AE0]\nE       \t(No symbol) [0x00007FF7E9CA510A]\nE       \t(No symbol) [0x00007FF7E9CF93D2]\nE       \t(No symbol) [0x00007FF7E9CF95FC]\nE       \t(No symbol) [0x00007FF7E9D43407]\nE       \t(No symbol) [0x00007FF7E9D1FFEF]\nE       \t(No symbol) [0x00007FF7E9D40181]\nE       \t(No symbol) [0x00007FF7E9D1FD53]\nE       \t(No symbol) [0x00007FF7E9CEA0E3]\nE       \t(No symbol) [0x00007FF7E9CEB471]\nE       \tGetHandleVerifier [0x00007FF7EA1DF30D+3366989]\nE       \tGetHandleVerifier [0x00007FF7EA1F12F0+3440688]\nE       \tGetHandleVerifier [0x00007FF7EA1E78FD+3401277]\nE       \tGetHandleVerifier [0x00007FF7E9F7AAAB+858091]\nE       \t(No symbol) [0x00007FF7E9E1E74F]\nE       \t(No symbol) [0x00007FF7E9E1A304]\nE       \t(No symbol) [0x00007FF7E9E1A49D]\nE       \t(No symbol) [0x00007FF7E9E08B69]\nE       \tBaseThreadInitThunk [0x00007FF8B2E6259D+29]\nE       \tRtlUserThreadStart [0x00007FF8B3AEAF38+40]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "start": 1738861705840, "stop": 1738861706591, "uuid": "07c2ec19-dce0-4ce9-90be-780babfe20b3", "historyId": "23a34a02cd4f603b6a92fe389372e7aa", "testCaseId": "23a34a02cd4f603b6a92fe389372e7aa", "fullName": "pre_sample_test.TestApp#test_product_add", "labels": [{"name": "severity", "value": "critical"}, {"name": "suite", "value": "pre_sample_test"}, {"name": "subSuite", "value": "TestApp"}, {"name": "host", "value": "DESKTOP-D5ES2FE"}, {"name": "thread", "value": "22632-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pre_sample_test"}]}