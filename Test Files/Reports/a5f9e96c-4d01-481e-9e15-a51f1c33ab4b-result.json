{"name": "test_edit_the_product", "status": "broken", "statusDetails": {"message": "TypeError: TestApp.test_edit_the_product() takes 0 positional arguments but 1 was given", "trace": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_and_report.<locals>.<lambda> at 0x000001B8FBDE09A0>, when = 'call'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n..\\.venv\\Lib\\site-packages\\_pytest\\runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\.venv\\Lib\\site-packages\\_pytest\\runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n..\\.venv\\Lib\\site-packages\\pluggy\\_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n..\\.venv\\Lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n..\\.venv\\Lib\\site-packages\\_pytest\\threadexception.py:92: in pytest_runtest_call\n    yield from thread_exception_runtest_hook()\n..\\.venv\\Lib\\site-packages\\_pytest\\threadexception.py:68: in thread_exception_runtest_hook\n    yield\n..\\.venv\\Lib\\site-packages\\_pytest\\unraisableexception.py:95: in pytest_runtest_call\n    yield from unraisable_exception_runtest_hook()\n..\\.venv\\Lib\\site-packages\\_pytest\\unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n..\\.venv\\Lib\\site-packages\\_pytest\\logging.py:846: in pytest_runtest_call\n    yield from self._runtest_for(item, \"call\")\n..\\.venv\\Lib\\site-packages\\_pytest\\logging.py:829: in _runtest_for\n    yield\n..\\.venv\\Lib\\site-packages\\_pytest\\capture.py:880: in pytest_runtest_call\n    return (yield)\n..\\.venv\\Lib\\site-packages\\_pytest\\skipping.py:257: in pytest_runtest_call\n    return (yield)\n..\\.venv\\Lib\\site-packages\\_pytest\\runner.py:174: in pytest_runtest_call\n    item.runtest()\n..\\.venv\\Lib\\site-packages\\_pytest\\python.py:1627: in runtest\n    self.ihook.pytest_pyfunc_call(pyfuncitem=self)\n..\\.venv\\Lib\\site-packages\\pluggy\\_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n..\\.venv\\Lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npyfuncitem = <Function test_edit_the_product>\n\n    @hookimpl(trylast=True)\n    def pytest_pyfunc_call(pyfuncitem: Function) -> object | None:\n        testfunction = pyfuncitem.obj\n        if is_async_function(testfunction):\n            async_warn_and_skip(pyfuncitem.nodeid)\n        funcargs = pyfuncitem.funcargs\n        testargs = {arg: funcargs[arg] for arg in pyfuncitem._fixtureinfo.argnames}\n>       result = testfunction(**testargs)\nE       TypeError: TestApp.test_edit_the_product() takes 0 positional arguments but 1 was given\n\n..\\.venv\\Lib\\site-packages\\_pytest\\python.py:159: TypeError"}, "start": 1738808707803, "stop": 1738808707803, "uuid": "d4cf50dd-d7c9-45fc-ade6-2562bd81595d", "historyId": "76683155501954271e9b967731e02c6c", "testCaseId": "76683155501954271e9b967731e02c6c", "fullName": "pre_sample_test.TestApp#test_edit_the_product", "labels": [{"name": "severity", "value": "normal"}, {"name": "suite", "value": "pre_sample_test"}, {"name": "subSuite", "value": "TestApp"}, {"name": "host", "value": "DESKTOP-D5ES2FE"}, {"name": "thread", "value": "12116-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pre_sample_test"}]}